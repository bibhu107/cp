<p><font size="2">
Given  <b>N</b> size of the orginal  array , <b>SUM</b> total sum of elements of the array and <b>K</b>  such that no element in array is greater than K, construct the original array where all elements in the array are unique.
If there is no solution, print -1 .
Note :: All elemnets should be positive.
</font></p> 


<p><font size="2">Examples:</font></p> 
<pre>
Input : N=3  SUM=15   K=8  
Output: array[]={1,6,8} 

Input : N=2  SUM=9   K=10  
Output: array[]={1,8} 

Input : N=3  SUM=23   K=8  
Output: -1

In the array all elements are less than K and all elements are unique and produce total sum as the given sum.
</pre>

<!-- To show strongly recommend and practice link    -->
<div id="practice"></div>

<p><font size="2">
We must choose N elements and all elements must be postive and less than K . So the </b>smallest possible sum </b> will  be sum of first N terms i.e. 1+2+3+...+N.
And the  <b>largest possible sum</b> will  K+(K-1)+(K-2)+.....+(K-N+1)  i.e sum of N terms from back ,keeping K as last term because no element in array can be greater than K.
Note :: 1.  1+2+3+4+5+6+............+N  = N*(N+1)) /2
        2.  K+(K-1)+(K-2)+.....+(K-N+1) = (N*K)- (N*(N-1))/2

So If the given sum is in between smallest and largest possible sum then only the array can be formed , or else we have to print -1.

Following is the complete algorithm:
1.Create an array of size N and fill it with first N numbers. So total sum of the array will be smallest possible sum.
2.Find the laregest element of the array , but as the array is sorted so  array[N] will be largest.
    A.If the largest element is less than K , We will replace it with K and check the new sum of the array, 
        2.1 If it is less than given SUM
            We will move to N-1 postion in the array because array[N] cann't be further incremented and to maintain uniqueness we will decrese K by 1. 
        2.2 If it is greater than given SUM
            We will replace an element such that sum will be given SUM, and will come out of loop.
    B.If the largest element is equal to K 
        2.1  We will move to N-1 postion in the array because array[N] cann't be further incremented and to maintain uniqueness we will decrese K by 1. 


3.Print the array.



</font></p>

[sourcecode language="CPP" highlight=""]
// C++ implementation of above algorithm: 
#include <bits/stdc++.h>
using namespace std;
int main()
{
    int N=3;
    int SUM=15;
    int K=8;
    
     //1 indexing array
    int arr[N+1]; 

    //smallest possible sum
    int minSum=(N*(N+1)) /2;

    //largest possible sum
    int maxSum= (N*K)- (N*(N-1))/2;

    if (minSum <= SUM && SUM <= maxSum) 
    {
            
          for(int i = 1;  i <= N; i++)
                arr[i] = i; //filling the array with first N terms to make it smallest possible sum
        
          int sum = minSum;

          for(int i = N; i >= 1; i--) //running the loop from last because the array is sorted and running from last will give largest numbers
            {
                int  x = sum + (K - i); //replacing i with K, Note arr[i]=i
                if(x < SUM){
                    sum = sum + (K - i);
                    arr[i] = K; //cann't be incremented further
                    K--; //to maintain uniqueness
                }
                else{
                    arr[i] += (SUM - sum); //directly replacing with a suitable element to make sum as given sum
                    sum = SUM; break;
                }
             }
             
          for(int i=1;i<=N;i++)
              cout<<arr[i]<<" ";
    }
    else
    cout<<"-1";
    cout<<endl;
}
[/sourcecode]
Output: 1 6 8
<pre>
4
</pre>
Time Complexity : O(n)

This article is contributed by <a href="http://auth.geeksforgeeks.org/profile.php?user=Bibhu Pala"><strong>Bibhu Prasad Pala</strong></a>. If you like GeeksforGeeks and would like to contribute, you can also write an article using <a href="http://www.contribute.geeksforgeeks.org">contribute.geeksforgeeks.org</a> or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.


Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.